{"version":3,"sources":["../src/index.js"],"names":["manService","recognition"],"mappings":";;AAyCA;;;;AAwCA;;;;AAjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AA0CA,IAAIA,aAAa,4BAAjB;AAxCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGAA,WAAWC,WAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.js","sourcesContent":["// var Tesseract = require('tesseract.js')\n// var Tesseract = Tesseract.create({\n//     workerPath: './libs/worker.js',\n//     langPath: './libs/',\n// })\n// Tesseract.recognize('t.png')\n// .then(function(result){\n//     console.log(result)\n// })\n// var getPixels = require(\"get-pixels\")\n\n\n//缩放\n\n// getPixels(\"t.png\", function(err, pixels) {\n//   if(err) {\n//     console.log(\"Bad image path\")\n//     return\n//   }\n//   console.log(pixels)\n// })\n\n// var gm = require('gm')\n// ,  fs = require('fs')\n// ,\timageMagick = gm.subClass({ imageMagick : true });\n\n// // imageMagick('mhh.png').resize(27, 27,'!').autoOrient().write('1.png', function(err){\n// //     if (err) {\n// //         console.log(err);\n// //     }\n// // });\n\n// //裁剪\n// imageMagick('cj.png').crop(100, 100, 50, 50).autoOrient().write('test.png', function(err){\n//     if (err) {\n//         console.log(err);\n//     }\n// });\n\n//比较\n// import path from 'path'\nimport config from './config.js';\n// var BlinkDiff =  require('blink-diff')\n// var images = require(\"images\");\n// images(path.join(config.originalImagePath,\"1.jpeg\")).save(path.join(config.originalImagePath,\"1.png\"));\n// images(path.join(config.originalImagePath,\"2.jpeg\")).save(path.join(config.originalImagePath,\"2.png\"));\n// var diff = new BlinkDiff({\n//     imageAPath: path.join(config.originalImagePath,\"1.png\"), // Use file-path \n//     imageBPath: path.join(config.originalImagePath,\"2.png\"),\n\n//     thresholdType: BlinkDiff.THRESHOLD_PERCENT,\n//     threshold: 0.3, // 1% threshold \n\n//     imageOutputPath: path.join(config.originalImagePath,\"diff.png\"),\n// });\n\n// diff.run(function (error, result) {\n//    if (error) {\n//       throw error;\n//    } else {\n//       console.log(diff.hasPassed(result.code) ? 'Passed' : 'Failed');\n//       console.log(result);\n//       console.log('Found ' + result.differences + ' differences.');\n//    }\n// });\n// import path from 'path';\n// var images = require(\"images\");\n// import config from './config.js';\n// let inputPath = path.join(config.originalImagePath,\"og.jpeg\"),\n// outPath = path.join(__dirname,\"./temp/\",'mhhhct.jpeg')\n// images(inputPath).resize(27,27).save(outPath);\n\n//清理目录下文件\n// import fileUtil from './utils/FileUtil.js';\n// fileUtil.mkdir(config.originalImagePath);\n// fileUtil.deleteFolder(config.originalImagePath);\n\n// deleteFolder(config.originalImagePath);\n// images(images(path.join(config.originalImagePath,\"og.jpeg\"),),20, 565,100, 200 ).save(\"testt.jpeg\");\n// console.log('test');\n// import fs from 'fs'\nimport {ManService} from './service/ManService.js';\nlet manService = new ManService();\nmanService.recognition();\n// console.log(config.originalImagePath)\n// if (fs.existsSync(config.originalImagePath)) {\n//             console.log('13123');\n//         }\n// let files = fs.readdirSync(config.originalImagePath);\n//         console.log(files);\n//         files.forEach(function(file) {\n//             console.log(file)\n//         }, this);\n\n//正式代码\n// import {Server} from './server/server.js';\n// let server = new Server();\n// server.init();"]}