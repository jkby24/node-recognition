{"version":3,"sources":["../../src/service/ManService.js"],"names":["ManService","value","suit"],"mappings":";;;;;;;qjBAAA;;;;;AAGA;;;;;;;;IACaA,U,WAAAA,U;AACT,0BAAc;AAAA;AAAE;;;;sCACF;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,mBAAO,CAAC;AACJC,uBAAM,CADF;AAEJC,sBAAK;AAFD,aAAD,CAAP;AAIP","file":"ManService.js","sourcesContent":["/**\r\n * 主处理类\r\n */\r\nimport config from '../config.js';\r\nexport class ManService {\r\n    constructor() {}\r\n    recognition() {\r\n\r\n        /** players = [{\r\n         *      id:'1',\r\n         *      boards:[{\r\n         *          value : '',\r\n         *          suit : ''\r\n         *      }]\r\n         * }]\r\n         * \r\n         *  发送adb命令截图保存到original目录下,根据设备名来保存\r\n         * \r\n         *  files = 遍历original目录\r\n         * \r\n         * files.forEach(file=>{\r\n         *    fileItem = {\r\n         *          id:file.name,\r\n         *          boards:[]\r\n         *      }\r\n         *      \r\n         *    rFile = 把图片统一缩小为指定尺寸到resize目录下\r\n         *    boards = 把rFile截取为一张张小图\r\n         *    boards.forEach(board =>{\r\n         *           infoFiles = board 对半截图\r\n         *           value = 获取牌值(infoFiles[0])\r\n         *           suit = 获取花色(infoFiles[1])\r\n         *          fileItem.boards.push({\r\n         *              value :value,\r\n         *              suit : suit\r\n         *          })\r\n         *      })\r\n         *    清理目录\r\n         *    boardsPooling = [{}]  \r\n         *    remainPlayerBoards = []; \r\n         *    根据三家牌算出第四个牌\r\n         *    players.forEach(player=>{\r\n         *          \r\n         *      })\r\n         * })\r\n         * \r\n         * \r\n         * \r\n         * \r\n         * \r\n         */\r\n            return [{\r\n                value:1,\r\n                suit:0\r\n            }]\r\n    }\r\n}"]}